{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tal.monsonego\\\\notes-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  var _note$content;\n  const [notes, setNotes] = useState([{\n    id: 1,\n    title: \"test note 1\",\n    content: \"bla bla note1\"\n  }, {\n    id: 2,\n    title: \"test note 2 \",\n    content: \"bla bla note2\"\n  }, {\n    id: 3,\n    title: \"test note 3\",\n    content: \"bla bla note3\"\n  }, {\n    id: 4,\n    title: \"test note 4 \",\n    content: \"bla bla note4\"\n  }, {\n    id: 5,\n    title: \"test note 5\",\n    content: \"bla bla note5\"\n  }, {\n    id: 6,\n    title: \"test note 6\",\n    content: \"bla bla note6\"\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Some dummy input field\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Content\",\n        rows: 10,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: (_note$content = note.content) === null || _note$content === void 0 ? void 0 : _note$content.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RFZ4mZVaPOMystq4bYfoed3XlKo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","_note$content","notes","setNotes","id","title","content","className","children","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","map","note","_c","$RefreshReg$"],"sources":["C:/Users/tal.monsonego/notes-app/src/App.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\n\n\nconst App = () => {\n  const [notes, setNotes] = useState<Note[]>([\n    {\n      id: 1,\n      title: \"test note 1\",\n      content: \"bla bla note1\",\n    },\n    {\n      id: 2,\n      title: \"test note 2 \",\n      content: \"bla bla note2\",\n    },\n    {\n      id: 3,\n      title: \"test note 3\",\n      content: \"bla bla note3\",\n    },\n    {\n      id: 4,\n      title: \"test note 4 \",\n      content: \"bla bla note4\",\n    },\n    {\n      id: 5,\n      title: \"test note 5\",\n      content: \"bla bla note5\",\n    },\n    {\n      id: 6,\n      title: \"test note 6\",\n      content: \"bla bla note6\",\n    },\n  ]);\n  return (\n    <div className=\"app-container\">\n      <form className=\"note-form\">\n        <input placeholder=\"Title\" required />\n        <input placeholder=\"Some dummy input field\" required/>\n        <textarea placeholder=\"Content\" rows={10} required />\n        <button type=\"submit\">Add Note</button>\n      </form>\n      <div className=\"notes-grid\">\n        {notes.map((note)(\n          <div className=\"note-item\">\n            <div className=\"notes-header\">\n            <button>x</button>\n            </div>\n            <h2>{note.title}</h2>\n            <p>{note.content?.content}</p>\n            </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}