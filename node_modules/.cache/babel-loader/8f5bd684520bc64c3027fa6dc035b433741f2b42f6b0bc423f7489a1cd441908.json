{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tal.monsonego\\\\notes-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([{\n    id: 1,\n    title: \"test note 1\",\n    content: \"bla bla note1\"\n  }, {\n    id: 2,\n    title: \"test note 2 \",\n    content: \"bla bla note2\"\n  }, {\n    id: 3,\n    title: \"test note 3\",\n    content: \"bla bla note3\"\n  }, {\n    id: 4,\n    title: \"test note 4 \",\n    content: \"bla bla note4\"\n  }, {\n    id: 5,\n    title: \"test note 5\",\n    content: \"bla bla note5\"\n  }, {\n    id: 6,\n    title: \"test note 6\",\n    content: \"bla bla note6\"\n  }]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNote] = useState(null);\n  const handleAddNote = event => {\n    event.preventDefault();\n    const newNote = {\n      id: notes.length + 1,\n      title: title,\n      content: content\n    };\n    setNotes([newNote, ...notes]);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  const handleNoteClick = note => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleUpdateNote = event => {\n    event.preventDefault();\n    if (!selectedNote) {\n      return;\n    }\n    const updatedNote = {\n      id: selectedNote.id,\n      title: title,\n      content: content\n    };\n    const updatedNotesList = notes.map(note => note.id === selectedNote.id ? updatedNote : note);\n    setNotes(updatedNotesList);\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: handleAddNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: event => setTitle(event.target.value),\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: event => setContent(event.target.value),\n        placeholder: \"Content\",\n        rows: 10,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        onClick: () => handleNoteClick(note),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"obbHB40uxW7w0XlcE8B1wJ2Yahs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","id","title","content","setTitle","setContent","selectedNote","setSelectedNote","handleAddNote","event","preventDefault","newNote","length","handleNoteClick","note","handleUpdateNote","updatedNote","updatedNotesList","map","className","children","onSubmit","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/tal.monsonego/notes-app/src/App.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\n\n\n\nconst App = () => {\n\n  type Note = {\n    id: number;\n    title: string;\n    content: string;\n  }\n\n  const [notes, setNotes] = useState<Note[]>([\n    {\n      id: 1,\n      title: \"test note 1\",\n      content: \"bla bla note1\",\n    },\n    {\n      id: 2,\n      title: \"test note 2 \",\n      content: \"bla bla note2\",\n    },\n    {\n      id: 3,\n      title: \"test note 3\",\n      content: \"bla bla note3\",\n    },\n    {\n      id: 4,\n      title: \"test note 4 \",\n      content: \"bla bla note4\",\n    },\n    {\n      id: 5,\n      title: \"test note 5\",\n      content: \"bla bla note5\",\n    },\n    {\n      id: 6,\n      title: \"test note 6\",\n      content: \"bla bla note6\",\n    },\n  ]);\n\n  const [title, setTitle] = useState(\"\");\n\n  const [content, setContent] =useState(\"\");\n\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null);\n\n  const handleAddNote = (event: React.FormEvent) => {\n    event.preventDefault();\n\n\n  const newNote: Note = {\n    id: notes.length + 1,\n    title: title,\n    content: content\n  }\n\n  setNotes([newNote, ...notes]);\n  setTitle(\"\");\n  setContent(\"\");\n\n  }\n\n  const handleNoteClick = (note:Note) => {\n    setSelectedNote(note);\n    setTitle(note.title)\n    setContent(note.content);\n  }\n\n  const handleUpdateNote = (event: React.FormEvent) => {\n    event.preventDefault();\n  \n    if (!selectedNote) {\n      return;\n    }\n  \n    const updatedNote: Note = {\n      id: selectedNote.id,\n      title: title,\n      content: content,\n    };\n  \n    const updatedNotesList = notes.map((note) => (note.id === selectedNote.id ? updatedNote : note));\n  \n    setNotes(updatedNotesList);\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n\n\n  return (\n    <div className=\"app-container\">\n      <form className=\"note-form\" onSubmit={handleAddNote}>\n        <input\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          placeholder=\"Title\"\n          required\n        ></input>\n        <textarea\n          value={content}\n          onChange={(event) => setContent(event.target.value)}\n          placeholder=\"Content\"\n          rows={10}\n          required\n        ></textarea>\n        <button type=\"submit\">Add Note</button>\n      </form>\n      <div className=\"notes-grid\">\n        {notes.map((note) => (\n          <div key={note.id} className=\"note-item\" onClick={() => handleNoteClick(note)}>\n            <div className=\"notes-header\">\n            <button>x</button>\n            </div>\n            <h2>{note.title}</h2>\n            <p>{note.content}</p>\n            </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}