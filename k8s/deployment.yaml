apiVersion: apps/v1
kind: Deployment
metadata:
  name: notes-app-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notes-app
  template:
    metadata:
      labels:
        app: notes-app
    spec:
      volumes:
      - name: codebase-vol
        emptyDir: {}  # Temporary storage for the app code
      - name: ssh-key
        secret:
          secretName: github-ssh-key

      initContainers:
      - name: git-clone
        image: alpine/git  # Alpine image with Git installed
        command:
          - /bin/sh
          - "-c"
          - |
            mkdir -p ~/.ssh && \
            cp /ssh-key/ssh-privatekey ~/.ssh/id_rsa && \
            chmod 600 ~/.ssh/id_rsa && \
            ssh-keyscan -H github.com >> ~/.ssh/known_hosts && \
            rm -rf /home/Notes-app-monolithic/* && \
            git clone git@github.com:monsotal/Notes-app-monolithic.git /home/Notes-app-monolithic && \
            ls -la /home/Notes-app-monolithic
        volumeMounts:
        - name: codebase-vol
          mountPath: /home/Notes-app-monolithic
          readOnly: false
        - name: ssh-key
          mountPath: /ssh-key
          readOnly: true

      containers:
      - name: notes-app-container
        image: monsotal/notes-app-monolithic:0.0.1
        ports:
        - containerPort: 80
        env:
        - name: PROJECTDIR
          value: "/home/Notes-app-monolithic"
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: notes-app-config
              key: DATABASE_URL
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: notes-app-config
              key: JWT_SECRET
        volumeMounts:
        - name: codebase-vol
          mountPath: "/home/Notes-app-monolithic"
        
        # Security context to run as root
        securityContext:
          runAsUser: 0
